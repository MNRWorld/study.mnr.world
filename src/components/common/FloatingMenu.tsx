
'use client';

import { Button } from '@/components/ui/button';
import { Menu } from 'lucide-react';
import React, { useState } from 'react';
import { cn } from '@/lib/utils';


const FloatingMenu = () => {
    const [menuOpen, setMenuOpen] = useState(false);

    const linkClasses = "block p-2 text-foreground hover:bg-accent rounded-md transition-colors";

    const menuItems = [
        { href: "#Links", label: "ЁЯФЧ ржЧрзБрж░рзБрждрзНржмржкрзВрж░рзНржг ржХрж┐ржЫрзБ рж▓рж┐ржВржХ ржПржХрждрзНрж░рзЗ" },
        { href: "#Circular", label: "ЁЯУД рж╕рж╛рж░рзНржХрзБрж▓рж╛рж░" },
        { href: "#QuestionBank", label: "ЁЯУЪ ржкрзНрж░рж╢рзНржиржмрзНржпрж╛ржВржХ" },
        { href: "#Apply", label: "ЁЯУЭ ржЖржмрзЗржжржи" },
        { href: "#AdmitCard", label: "ЁЯОЯ ржкрзНрж░ржмрзЗрж╢ржкрждрзНрж░" },
        { href: "#ExamDate", label: "тП░ ржкрж░рзАржХрзНрж╖рж╛рж░ рж╕ржорзЯржХрж╛рж▓" },
        { href: "#Location", label: "ЁЯЧ║я╕П ржнрж░рзНрждрж┐ ржкрж░рзАржХрзНрж╖рж╛рж░ ржХрзЗржирзНржжрзНрж░" },
        { href: "#MarkDistributionAndOthers", label: "тД╣я╕П ржорж╛ржиржмржгрзНржЯржи ржУ ржЕржирзНржпрж╛ржирзНржп рждржерзНржп" },
        { href: "#Result", label: "ЁЯУК ржнрж░рзНрждрж┐ ржкрж░рзАржХрзНрж╖рж╛рж░ ржлрж▓рж╛ржлрж▓" },
        { href: "#Subjects", label: "ЁЯСд рж╕рж╛ржмржЬрзЗржХрзНржЯ ржкрзНрж░рждрж┐ рж╕рж┐ржЯ рж╕ржВржЦрзНржпрж╛" },
    ];

    return (
        <div className="fixed top-1/2 right-0 transform -translate-y-1/2 z-50">
            <Button onClick={() => setMenuOpen(!menuOpen)} className="bg-primary text-primary-foreground rounded-l-full rounded-r-none px-4 py-3 text-lg hover:bg-primary/90">
                <Menu />
            </Button>
            <div
                className={cn(
                    "absolute right-full top-1/2 -translate-y-1/2 w-56 bg-card border border-border rounded-lg shadow-lg p-2.5 transition-all duration-300 ease-in-out",
                    menuOpen ? "opacity-100 translate-x-0" : "opacity-0 -translate-x-4 pointer-events-none"
                )}
            >
                {menuItems.map((item, index) => (
                    <a 
                        key={index}
                        href={item.href} 
                        className={cn(linkClasses, "transition-transform duration-200 ease-in-out")}
                        style={{ transitionDelay: `${index * 30}ms`, transform: menuOpen ? 'translateX(0)' : 'translateX(20px)' }}
                    >
                        {item.label}
                    </a>
                ))}
            </div>
        </div>
    );
}

export default FloatingMenu;
